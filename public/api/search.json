[{"id":"6edc7e80b6c423be10ef2818f163d62f","title":"Nginx前端静态项目部署","content":"Nginx 可以部署以下几类不同类型的项目：静态网站：使用 HTML、CSS、JavaScript 等静态文件构建的网站，Nginx 可以将这些静态文件提供给用户。动态 Web 应用程序：使用 PHP、Python、Java、Node.js 等语言开发的 Web 应用程序，Nginx 可以通过 FastCGI、uWSGI、SCGI 等协议与 Web 应用程序进行通信，以提供动态内容。反向代理：以 Nginx 服务器作为代理服务器，可以将客户端的请求转发至后端的其他服务器或 Web 应用程序上，实现负载均衡、缓存加速、安全控制等功能。WebSocket 应用程序：Nginx 可以使用 HTTP&#x2F;1.1 或 HTTP&#x2F;2 协议进行 WebSocket 代理，实现实时通信功能。\n一、简单静态项目部署1、打开 Nginx 配置文件 nginx.conf，该文件一般位于 &#x2F;etc&#x2F;nginx&#x2F; 目录下。2、将 server 块添加到配置文件中，用于定义要部署的网站或 Web 应用程序：配置定义了一个名为 http://test.com 的虚拟主机，监听 HTTP 80 端口，并将所有请求转发至 &#x2F;var&#x2F;www&#x2F;test 目录下的 index.html 文件。其中 listen 关键字用于定义监听端口，server_name 用于定义虚拟主机的域名或 IP 地址，location 用于定义请求路径和资源文件的位置。\nbash使用WinSCP上线web项目到指定文件夹/var/www/test\nnginx默认文件目录为/usr/share/nginx/html\nvi /etc/nginx/nginx.conf\n##编辑文件\nserver &#123;\n    listen 80;\n    server_name test.com;\n    location / &#123; #新增\n        root /var/www/test; #项目目录\n        index index.html;\n    &#125;\n&#125;\n:wq\nnginx -s reload \n参考文章nginx常用配置操作命令Nginx多种项目部署教程Nginx部署命令\n","slug":"nginx/ng2","date":"2023-10-17T10:02:22.000Z","categories_index":"Nginx","tags_index":"nginx命令","author_index":"吾曜"},{"id":"aa4e9698da0c12599ca77b93ebd8a596","title":"在CentOS上安装Nginx 相关操作","content":"要在CentOS上安装Nginx，请按照以下步骤进行操作：1.更新系统软件包：2.安装EPEL存储库（Extra Packages for Enterprise Linux）3.安装Nginx：4.启动Nginx服务：5.设置Nginx开机启动：6.检查Nginx是否正常运行：7.在Web浏览器中输入服务器的IP地址，你应该能够看到Nginx的欢迎页面。8.启动 nginx 成功之后通过 IP 访问失败\nbash1.sudo yum update\n2.sudo yum install epel-release\n3.sudo yum install nginx\n4.sudo systemctl start nginx\n5.sudo systemctl enable nginx\n6.sudo systemctl status nginx\n7.\n8.systemctl status firewalld.service\nsystemctl stop firewalld.service\n$ nginx常用基础命令\n\nnetstat -ntlp #查看端口占用\n#停止\n/usr/local/nginx/sbin/nginx -s stop/quit\n#重新加载\n/usr/local/nginx/sbin/nginx -s reload\n#修改配置\n/usr/local/nginx/conf/nginx.conf\nnginx -c /home/xx/nginx.conf\n#-c &lt;/path/to/config&gt; 为 Nginx 指定一个配置文件，来代替缺省的。 \n#例如：nginx -t -c /usr/local/nginx/conf/nginx.conf 判断配置文件是否正确\nnginx -t \nnginx -v\n\n#建议一次性安装以下四个依赖库：pcre、zlib、OpenSSL和gd-devel\nyum -y install pcre pcre-devel zlib zlib-devel openssl openssl-devel gd gd-devel","slug":"nginx/ng1","date":"2023-10-16T10:02:22.000Z","categories_index":"Nginx","tags_index":"nginx命令","author_index":"吾曜"},{"id":"eed72eff10da3ab13bb0fdc6576faa22","title":"10年后的程序员应该具备什么技术能力","content":"十年后的程序员可能会需要具备以下一些技术能力：人工智能和机器学习随着人工智能和机器学习技术的不断发展，程序员可能需要掌握这些技术的深入知识，以便开发更复杂的应用程序和算法。区块链技术区块链技术可能会变得更加重要，程序员需要了解如何使用区块链技术构建安全、可扩展的应用程序。云计算云计算将继续发展，程序员需要深入了解云计算的基础设施和服务，以便更好地优化应用程序的性能和安全性。前端开发前端开发技术不断发展，程序员需要不断更新他们的前端开发技能，以便构建更好的用户界面和用户体验。后端开发后端开发技术也在不断发展，程序员需要掌握新的框架和工具，以便更好地构建高效、可扩展的应用程序。软件安全随着应用程序变得越来越复杂，软件安全问题也会变得越来越重要。程序员需要了解如何编写安全代码，以及如何保护应用程序不受攻击。持续集成和持续部署（CI&#x2F;CD）CI&#x2F;CD 已成为现代软件开发的必备工具，程序员需要了解如何使用这些工具来自动化和优化他们的开发流程。版本控制版本控制对于程序员来说仍然很重要，因此程序员需要了解如何使用版本控制系统来管理他们的代码。测试驱动开发测试驱动开发是一个非常重要的编程方法，可以帮助程序员更有效地设计和开发代码。沟通和合作能力作为团队成员工作，有效沟通是必不可少的。此外，随着软件开发生态系统的日益复杂化，程序员需要能够与其他领域的专业人士进行合作。适应性学习能力由于技术快速变化，程序员需要具备快速学习和适应新技术的能力。这可能包括学习新的编程语言、框架、工具和技术。理解业务逻辑和需求分析好的程序员不仅需要理解技术，也需要理解业务逻辑和需求分析。这样可以帮助他们更好地理解项目目标，为项目提供更大的价值。性能优化能力随着应用程序变得越来越复杂，性能问题也变得越来越重要。程序员需要了解如何优化他们的代码，以提高应用程序的性能。\n这些只是十年后程序员可能需要的部分技术能力，未来的情况可能会有所不同。因此，持续学习和适应新技术是保持竞争力的关键。\n","slug":"ai/a1","date":"2023-10-12T03:02:22.000Z","categories_index":"AI","tags_index":"技术","author_index":"吾曜"},{"id":"8e7e9b070840d8ca43cdee46321df425","title":"Hexo 文章样式合集","content":"大标题小标题Warning!!!Warning!!!\n\n\n\n\n\n\n\n\n\nnormal quote block.\n\n本地图片\n网络图片跳转链接\n\n\n\n\n姓名\n性别\n年龄\n\n\n\n明明\n女\n18\n\n\n明明\n女\n48\n\n\n参考文章Hexo Aurora主题文档搭建Hexo个人博客搭建与配置详细教程Hexo集成Algolia实现搜索功能\nbash## 大标题\n### 小标题\n*Warning!!!*\n**Warning!!!**\n&gt; normal quote block.\n- 本地图片\n![本地图](images/ai.jpg)\n![图片](https://avatars.githubusercontent.com/u/126133433?v=4)\n[跳转链接](https://m.tataxingqiu.com/txqfe__test/mass/luckKitty.html)\n| 姓名 | 性别 | 年龄 |\n| ---  | --- |  --- | \n| 明明 | 女 | 18 |","slug":"hexo/h1","date":"2023-10-08T10:02:22.000Z","categories_index":"Hexo","tags_index":"实例","author_index":"吾曜"}]